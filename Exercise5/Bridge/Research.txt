Bridge Pattern:

1. What and why?
-> Bridge is used when we need to decouple an abstraction from its implementation so 
   that the two can vary independently.
-> This type of design pattern comes under structural pattern as this pattern decouples 
   implementation class and abstract class by providing a bridge structure between them.

2. When do we use Bridge Pattern?
-> When there is a need to decouple an abstraction from its implementation so that both can vary independently.
-> When there is a need to avoid a permanent binding between an abstraction and its implementation, which could be the case when an implementation must be selected or switched at runtime.
-> When there are multiple dimensions or types of classifications of abstractions and implementations, and a hierarchy of classes would result in an impractical number of class combinations.